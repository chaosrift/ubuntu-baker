name: Build Single Image in Parallel
run-name: >
  Build ${{ github.event.inputs.board }}
  ${{ github.event.inputs.suite }}
  ${{ github.event.inputs.flavor }}
  by @${{ github.actor }} (Trigger: ${{ github.event_name }})

on:

  workflow_dispatch:
    inputs:
      board:
        description: 'Target board (e.g., orangepi-5-plus, rock-5b)'
        required: true
        type: string
        default: 'orangepi-5-plus'

      suite:
        description: 'Ubuntu suite (e.g., noble, jammy)'
        required: true
        type: choice
        default: noble
        options:
          - noble
          - jammy
          # Add other supported suites as needed

      flavor:
        description: 'Ubuntu flavor (e.g., desktop, server)'
        required: true
        type: choice
        default: desktop
        options:
          - desktop
          - server
          # Add other supported flavors as needed

      runner:
        description: 'Specify the runner label (e.g., ubuntu-latest, windows-latest, self-hosted-runner).'
        required: false
        type: choice
        default: 'ubuntu-latest'
        options:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - github-linux64-ubuntu-latest-8core  # Large GitHub-hosted runner
          - github-arm64-ubuntu-24.04-8core  # ARM64 self-hosted runner

      baker_artifact_retention_days:
        description: 'Retention days for baker artifacts'
        required: false
        type: number
        default: 1

      image_artifact_retention_days:
        description: 'Retention days for artifacts downloaded from bakers and the final image'
        required: false
        type: number
        default: 90

  repository_dispatch:
    types: [event-bake-one]

env:
  RECIPE_REP: "diverger/ubuntu-rockchip"
  RECIPE_REF: "diverger"
  RECIPE_DIR: "."

jobs:
  rootfs:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ${{ github.event.inputs.runner || github.event.client_payload.runner || 'ubuntu-latest' }}
    name: Build rootfs
    outputs:
      artifact_name: ${{ steps.rootfs_baker_step.outputs.artifact_name }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Extract variant from board config
        id: extract_variant
        shell: bash
        run: |
          # Source the board config file to get ROOTFS_VARIANT
          if [ -f "config/boards/${{ github.event.inputs.board }}.sh" ]; then
            source "config/boards/${{ github.event.inputs.board }}.sh"
            variant="${ROOTFS_VARIANT}"
            echo "variant=$variant" >> $GITHUB_OUTPUT
            echo "Board config found: ROOTFS_VARIANT=$variant"
          else
            echo "❌ Board config file not found: config/boards/${{ github.event.inputs.board }}.sh"
            echo "Using default variant: direct"
            echo "variant=direct" >> $GITHUB_OUTPUT
          fi

      - name: Run local build
        id: rootfs_baker_step
        uses: "./.github/actions/rootfs-baker"
        with:
          suite: ${{ github.event.inputs.suite }}
          flavor: ${{ github.event.inputs.flavor }}
          variant: ${{ steps.extract_variant.outputs.variant }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}',  github.event.inputs.baker_artifact_retention_days) }}

  kernel:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ${{ github.event.inputs.runner || github.event.client_payload.runner || 'ubuntu-latest' }}
    name: Build kernel
    outputs:
      artifact_name: ${{ steps.kernel_baker_step.outputs.artifact_name }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: kernel_baker_step
        uses: "./.github/actions/kernel-baker"
        with:
          board: ${{ github.event.inputs.board }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}',  github.event.inputs.baker_artifact_retention_days) }}

  uboot:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ${{ github.event.inputs.runner || github.event.client_payload.runner || 'ubuntu-latest' }}
    name: Build uboot
    outputs:
      artifact_name: ${{ steps.uboot_baker_step.outputs.artifact_name }}

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: uboot_baker_step
        uses: "./.github/actions/uboot-baker"
        with:
          board: ${{ github.event.inputs.board }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          artifact_retention_days: ${{ format('{0}',  github.event.inputs.baker_artifact_retention_days) }}

  image:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ${{ github.event.inputs.runner || github.event.client_payload.runner || 'ubuntu-latest' }}
    needs: [rootfs, kernel, uboot]
    name: Build Ubuntu Rockchip Image

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REP }}
          ref: ${{ env.RECIPE_REF }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_DIR }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        id: image_build_step
        uses: ./.github/actions/image-baker
        with:
          action_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          board: ${{ github.event.inputs.board }}
          suite: ${{ github.event.inputs.suite }}
          flavor: ${{ github.event.inputs.flavor }}
          rootfs_artifact_name: ${{ needs.rootfs.outputs.artifact_name }}
          kernel_artifact_name: ${{ needs.kernel.outputs.artifact_name }}
          uboot_artifact_name: ${{ needs.uboot.outputs.artifact_name }}
          artifact_retention_days: ${{ github.event.inputs.image_artifact_retention_days }}
          oss_access_key: ${{ secrets.OSS_ACCESS_KEY }}
          oss_secret_key: ${{ secrets.OSS_SECRET_KEY }}

      - name: Calculate expire date
        if: ${{ success() && steps.image_build_step.outcome == 'success' }}
        id: expire
        run: |
          expire_date=$(date -u -d "+${{ github.event.inputs.image_artifact_retention_days }} days" +"%Y-%m-%d")
          echo "Expire date: $expire_date"
          echo "expire_date=$expire_date" >> $GITHUB_OUTPUT
          echo "📅 OS Image Artifact Expire Date: $expire_date" >> $GITHUB_STEP_SUMMARY
