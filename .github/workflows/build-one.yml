name: Build Single Image in Streaming
# TODO: Add repository_dispatch support
run-name: >
  Build ${{ github.event.inputs.board }}
  ${{ github.event.inputs.suite }}
  ${{ github.event.inputs.flavor }}
  by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      board:
        description: 'Target board (e.g., orangepi-5-plus, rock-5b)'
        required: true
        type: string
        default: orangepi-5-plus

      suite:
        description: 'Ubuntu suite (e.g., noble, jammy)'
        required: true
        type: choice
        default: noble
        options:
          - noble
          - jammy
          # Add other supported suites as needed

      flavor:
        description: 'Ubuntu flavor (e.g., desktop, server)'
        required: true
        type: choice
        default: desktop
        options:
          - desktop
          # - server
          # Add other supported flavors as needed

      image_artifact_retention_days:
        description: 'Retention days for final image artifacts'
        required: false
        type: number
        default: 90

      baker_artifact_retention_days:
        description: 'Retention days for baker artifacts'
        required: false
        type: number
        default: 1

      build_image:
        description: 'Enable final image build'
        required: false
        default: true
        type: boolean

      # OCI/Registry inputs (simplified)
      registry_check:
        description: 'Check OCI registry to speed up builds'
        required: false
        default: false
        type: boolean

      registry_upload:
        description: 'Upload artifacts to OCI registry (GHCR)'
        required: false
        default: false
        type: boolean

      registry_namespace:
        description: 'Registry namespace (owner/repo format)'
        required: false
        type: string

env:
  RECIPE_REPO: "diverger/ubuntu-rockchip"
  RECIPE_PATH: "."

jobs:
  build:
    if: ${{ github.actor == 'diverger' }}
    runs-on: ubuntu-latest
    name: Build Ubuntu Rockchip Image

    steps:
      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      - name: Calculate expire date
        id: expire
        run: |
          expire_date=$(date -u -d "+${{ github.event.inputs.image_artifact_retention_days }} days" +"%Y-%m-%d")
          echo "Expire date: $expire_date"
          echo "expire_date=$expire_date" >> $GITHUB_OUTPUT
          echo "### Artifact Expire Date: $expire_date" >> $GITHUB_STEP_SUMMARY

      # - name: Manual Trigger Step
      #   if: github.event.inputs.trigger_source == 'manual'
      #   run: echo "This step runs only for manual triggers."

      # - name: Workflow Trigger Step
      #   if: github.event.inputs.trigger_source == 'workflow'
      #   run: echo "This step runs only when triggered by another workflow."

      - name: Show OCI registry configuration
        run: |
          echo "### OCI Registry Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- Registry Check: ${{ github.event.inputs.registry_check }}" >> $GITHUB_STEP_SUMMARY
          echo "- Registry Upload: ${{ github.event.inputs.registry_upload }}" >> $GITHUB_STEP_SUMMARY
          echo "- Registry URL: ghcr.io (default)" >> $GITHUB_STEP_SUMMARY
          echo "- Registry Namespace: ${{ github.event.inputs.registry_namespace || github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- ORAS Method: action (default)" >> $GITHUB_STEP_SUMMARY
          echo ""
          echo "ðŸ”§ OCI Registry Settings:"
          echo "  Check: ${{ github.event.inputs.registry_check }}"
          echo "  Upload: ${{ github.event.inputs.registry_upload }}"
          echo "  URL: ghcr.io (default)"
          echo "  Namespace: ${{ github.event.inputs.registry_namespace || github.repository }}"
          echo "  ORAS: action (default)"

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REPO }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_PATH }}
          clean: false
          fetch-depth: 1
          lfs: true

      - name: Run local build
        uses: ./.github/actions/image-build
        with:
          repo_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
          board: ${{ github.event.inputs.board }}
          suite: ${{ github.event.inputs.suite }}
          flavor: ${{ github.event.inputs.flavor }}
          baker_artifact_retention_days: ${{ github.event.inputs.baker_artifact_retention_days }}
          image_artifact_retention_days: ${{ github.event.inputs.image_artifact_retention_days }}
          build_rootfs: 'true'
          build_kernel: 'true'
          build_uboot: 'true'
          build_image: ${{ github.event.inputs.build_image }}
          # OCI/Registry inputs
          registry_check: ${{ github.event.inputs.registry_check }}
          registry_upload: ${{ github.event.inputs.registry_upload }}
          registry_token: ${{ secrets.GH_ACCESS_TOKEN }}
          registry_username: ${{ github.actor }}
          registry_url: 'ghcr.io'
          registry_namespace: ${{ github.event.inputs.registry_namespace || github.repository }}
          oras_install_method: 'action'

